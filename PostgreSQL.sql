DROP TABLE IF EXISTS Users CASCADE;
CREATE TABLE Users (
  userId serial PRIMARY KEY,
  age INT NOT NULL
);

DROP TABLE IF EXISTS Items CASCADE;
CREATE TABLE Items (
  itemId serial PRIMARY KEY ,
  price FLOAT NOT NULL
);

DROP TABLE IF EXISTS Purchases CASCADE;
CREATE TABLE Purchases  (
  purchaseId serial PRIMARY KEY ,
  userId INT NOT NULL,
  itemId INT,
  date DATE,
  FOREIGN KEY(userId) REFERENCES Users (userId),
  FOREIGN KEY(itemId) REFERENCES Items (itemId)
);


INSERT INTO Users(userId, age)  VALUES
(1, 31),
(2, 96),
(3, 22),
(4, 78),
(5, 72),
(6, 67),
(7, 93),
(8, 72),
(9, 60),
(10, 33),
(11, 102),
(12, 101),
(13, 68),
(14, 93),
(15, 80),
(16, 71),
(17, 81),
(18, 62),
(19, 82),
(20, 86),
(21, 67),
(22, 19),
(23, 89),
(24, 49),
(25, 100),
(26, 85),
(27, 26),
(28, 48),
(29, 91),
(30, 28),
(31, 106),
(32, 22),
(33, 87),
(34, 59),
(35, 25),
(36, 76),
(37, 76),
(38, 86),
(39, 33),
(40, 31),
(41, 30),
(42, 44),
(43, 94),
(44, 76),
(45, 61),
(46, 29),
(47, 19),
(48, 65),
(49, 46),
(50, 82),
(51, 76),
(52, 29),
(53, 28),
(54, 47),
(55, 27),
(56, 29),
(57, 26),
(58, 49),
(59, 30),
(60, 25),
(61, 63),
(62, 43),
(63, 24),
(64, 63),
(65, 36),
(66, 46),
(67, 65),
(68, 52),
(69, 28),
(70, 50),
(71, 56),
(72, 30),
(73, 41),
(74, 33),
(75, 20),
(76, 22),
(77, 39),
(78, 21),
(79, 21),
(80, 33),
(81, 75),
(82, 36),
(83, 45),
(84, 22),
(85, 48),
(86, 67),
(87, 19),
(88, 20),
(89, 49),
(90, 38),
(91, 78),
(92, 91),
(93, 107),
(94, 105),
(95, 78),
(96, 40),
(97, 39),
(98, 78),
(99, 18),
(100, 64);

INSERT INTO Items(itemId, price)  VALUES
(1, 73387),
(2, 67147),
(3, 19776),
(4, 65270),
(5, 7584),
(6, 91407),
(7, 132495),
(8, 122126),
(9, 1052),
(10, 122926),
(11, 148379),
(12, 119816),
(13, 119909),
(14, 120886),
(15, 70690),
(16, 42574),
(17, 135975),
(18, 5671),
(19, 60416),
(20, 102618),
(21, 127329),
(22, 29771),
(23, 60316),
(24, 63408),
(25, 49176),
(26, 140324),
(27, 114929),
(28, 17228),
(29, 126603),
(30, 92597),
(31, 39618),
(32, 59277),
(33, 62964),
(34, 31537),
(35, 43089),
(36, 69936),
(37, 97247),
(38, 3696),
(39, 96060),
(40, 104057),
(41, 103107),
(42, 122083),
(43, 6535),
(44, 89019),
(45, 68673),
(46, 10442),
(47, 79607),
(48, 102358),
(49, 68355),
(50, 95006),
(51, 52677),
(52, 131360),
(53, 129433),
(54, 60262),
(55, 122526),
(56, 69762),
(57, 117893),
(58, 99484),
(59, 102598),
(60, 78365),
(61, 59848),
(62, 85426),
(63, 133736),
(64, 29435),
(65, 68330),
(66, 56315),
(67, 76436),
(68, 28530),
(69, 40959),
(70, 54364),
(71, 61688),
(72, 123027),
(73, 47825),
(74, 91768),
(75, 131856),
(76, 22143),
(77, 17342),
(78, 50550),
(79, 38699),
(80, 109614),
(81, 51960),
(82, 120369),
(83, 144253),
(84, 124658),
(85, 46211),
(86, 16009),
(87, 76330),
(88, 18595),
(89, 72135),
(90, 57635),
(91, 66995),
(92, 61660),
(93, 115415),
(94, 74303),
(95, 140179),
(96, 36026),
(97, 124176),
(98, 26423),
(99, 15334),
(100, 141754);


INSERT INTO Purchases(purchaseId, userId, itemId, date)  VALUES 
(1,5,58,   '2022-03-08'),
(2,97,93,  '2022-10-10'),
(3,99,88,  '2020-10-24'),
(4,24,44,  '2020-07-04'),
(5,25,9,   '2019-05-02'),
(6,66,14,  '2020-08-04'),
(7,36,86,  '2019-08-09'),
(8,77,16,  '2020-06-22'),
(9,46,94,  '2020-05-31'),
(10,26,29, '2020-10-21'),
(11,43,66, '2019-09-16'),
(12,94,18, '2019-07-14'),
(13,76,11, '2021-12-23'),
(14,73,86, '2019-10-23'),
(15,91,55, '2022-03-25'),
(16,52,95, '2022-07-11'),
(17,42,78, '2021-09-20'),
(18,87,96, '2022-10-27'),
(19,90,69, '2019-02-28'),
(20,92,9,  '2020-05-17'),
(21,92,81, '2019-02-22'),
(22,42,17, '2021-04-12'),
(23,34,47, '2020-02-02'),
(24,77,87, '2019-07-16'),
(25,72,69, '2021-06-01'),
(26,20,73, '2019-02-04'),
(27,12,79, '2019-03-15'),
(28,6,53,  '2019-04-13'),
(29,4,68,  '2021-11-15'),
(30,79,32, '2021-07-01'),
(31,62,97, '2019-05-06'),
(32,43,15, '2021-03-19'),
(33,7,96,  '2020-11-09'),
(34,58,84, '2020-02-11'),
(35,48,98, '2020-02-09'),
(36,41,53, '2022-02-04'),
(37,11,14, '2020-03-09'),
(38,1,5,   '2020-02-27'),
(39,60,56, '2019-06-16'),
(40,36,4,  '2020-02-15'),
(41,39,26, '2022-10-17'),
(42,73,19, '2019-01-03'),
(43,48,74, '2019-01-05'),
(44,89,84, '2019-12-19'),
(45,64,70, '2022-09-19'),
(46,87,82, '2019-12-31'),
(47,24,16, '2021-12-19'),
(48,20,21, '2022-04-05'),
(49,76,56, '2020-02-01'),
(50,19,3,  '2020-09-09'),
(51,15,78, '2021-01-03'),
(52,69,92, '2022-03-23'),
(53,38,10, '2020-01-31'),
(54,90,90, '2021-12-08'),
(55,40,96, '2019-03-17'),
(56,39,89, '2021-06-08'),
(57,1,100, '2019-04-28'),
(58,48,65, '2021-09-14'),
(59,6,40,  '2021-05-07'),
(60,60,4,  '2021-02-06'),
(61,23,38, '2019-03-08'),
(62,81,79, '2021-10-17'),
(63,23,58, '2019-02-06'),
(64,40,56, '2020-03-12'),
(65,58,55, '2021-01-03'),
(66,53,46, '2020-03-17'),
(67,5,79,  '2019-02-07'),
(68,28,49, '2022-03-12'),
(69,86,95, '2020-09-15'),
(70,44,24, '2022-04-05'),
(71,29,74, '2021-12-11'),
(72,74,28, '2020-01-08'),
(73,34,80, '2022-01-02'),
(74,97,48, '2021-01-17'),
(75,7,92,  '2019-10-02'),
(76,78,45, '2022-07-06'),
(77,1,31,  '2022-05-11'),
(78,44,74, '2021-02-21'),
(79,52,61, '2022-04-25'),
(80,61,23, '2020-01-27'),
(81,77,86, '2022-01-08'),
(82,45,27, '2020-03-09'),
(83,87,37, '2019-09-22'),
(84,46,84, '2022-02-12'),
(85,35,22, '2022-07-20'),
(86,84,44, '2022-05-28'),
(87,100,76,'2021-06-01'),
(88,46,67, '2019-09-13'),
(89,89,53, '2019-01-26'),
(90,38,61, '2019-09-25'),
(91,27,19, '2021-03-25'),
(92,46,3,  '2019-07-10'),
(93,26,22, '2019-12-25'),
(94,5,80,  '2020-12-12'),
(95,74,5,  '2022-10-03'),
(96,57,25, '2020-03-23'),
(97,28,55, '2019-06-28'),
(98,15,6,  '2020-12-08'),
(99,10,45, '2019-06-16'),
(100,55,9, '2021-10-21');

-- А) какую сумму в среднем в месяц тратит:
-- пользователи в возрастном диапазоне от 18 до 25 лет включительно
select 
	users.userId,
    AVG(price) as january_avg
from users join Purchases on users.userId = Purchases.userId JOIN Items on Purchases.itemId = Items.itemId
where age BETWEEN 18 and 35
and
date BETWEEN '2022-10-01' and '2022-10-31'
group by users.userId;

-- пользователи в возрастном диапазоне от 26 до 35 лет включительно
select 
	users.userId,
    AVG(price) as january_avg
from users join Purchases on users.userId = Purchases.userId JOIN Items on Purchases.itemId = Items.itemId
where age BETWEEN 26 and 35
and
date BETWEEN '2022-10-01' and '2022-10-31'
group by users.userId;

-- Б) в каком месяце года выручка от пользователей в возрастном диапазоне 35+ самая большая
select 
	EXTRACT (MONTH FROM date) as month_number,
    SUM(price) as SUM_month
from users join Purchases on users.userId = Purchases.userId JOIN Items on Purchases.itemId = Items.itemId
where age <= 35 
and
date BETWEEN '2022-01-01' and '2022-12-31'
GROUP by date
order by SUM_month DESC
limit 1;

-- В) какой товар обеспечивает дает наибольший вклад в выручку за последний год
select 
	Items.itemId,
    SUM(price) as SUM_year
from users join Purchases on users.userId = Purchases.userId JOIN Items on Purchases.itemId = Items.itemId
where date BETWEEN '2022-01-01' and '2022-12-31' 
GROUP by Items.itemId
order by SUM_year DESC
limit 1;

-- Г) топ-3 товаров по выручке и их доля в общей выручке за любой год
select 
	Items.itemId,
    SUM(price) as SUM_year,
    ROUND ( (sum(price) / (select sum(price) from users join Purchases on users.userId = Purchases.userId JOIN Items on Purchases.itemId = Items.itemId) * 100)) as part_of_the_proceeds_percent
from users join Purchases on users.userId = Purchases.userId JOIN Items on Purchases.itemId = Items.itemId
where date BETWEEN '2022-01-01' and '2022-12-31' 
GROUP by Items.itemId
order by SUM_year DESC
limit 3;
